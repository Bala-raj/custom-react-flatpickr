import React from 'react';

import DataPicker from '../src/index';
import './style.scss';
import '../src/style.scss';

class Example extends React.Component {
    constructor(props) {
        super(props);

        this.state = {
            dateRange: '',
            dateStr: ''
        }
        this.onChange = this.onChange.bind(this);
    }

    onChange(selectedDates, dateStr, instance) {
        if (selectedDates.length > 1)
            this.setState({ dateRange: selectedDates, dateStr });
        window.instance = instance;
    }

    render() {
        return (
            <div style={{}}>

                <div className="datepicker range">
                    <label className="title"> Date Range Picker </label>
                    <p className="description">You can config Range Picker in calendar.</p>
                    <div className="highlight">
                        <pre>&#123;`


                                        enableTime<span>:</span> <span>true</span>,
                        `&#125;
                        </pre>
                    </div>
                    <p> { this.state.dateStr} </p>
                    <DataPicker options={{ mode: "range", inline: true, maxDate: Date.now(), onChange: this.onChange, defaultValue: this.state.dateRange }} >
                        <button>
                            <svg width="14px" height="15px" viewBox="0 0 14 16" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                <g id="Messages" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                                    <g id="Inbox-Message-Detailed-No-Tab" transform="translate(-1353.000000, -238.000000)" fill="#3B4752">
                                        <path d="M1357.625,247 L1356.375,247 C1356.27083,247 1356.18229,246.963542 1356.10938,246.890625 C1356.03646,246.817708 1356,246.729167 1356,246.625 L1356,245.375 C1356,245.270833 1356.03646,245.182292 1356.10938,245.109375 C1356.18229,245.036458 1356.27083,245 1356.375,245 L1357.625,245 C1357.72917,245 1357.81771,245.036458 1357.89062,245.109375 C1357.96354,245.182292 1358,245.270833 1358,245.375 L1358,246.625 C1358,246.729167 1357.96354,246.817708 1357.89062,246.890625 C1357.81771,246.963542 1357.72917,247 1357.625,247 Z M1361,246.625 C1361,246.729167 1360.96354,246.817708 1360.89062,246.890625 C1360.81771,246.963542 1360.72917,247 1360.625,247 L1359.375,247 C1359.27083,247 1359.18229,246.963542 1359.10938,246.890625 C1359.03646,246.817708 1359,246.729167 1359,246.625 L1359,245.375 C1359,245.270833 1359.03646,245.182292 1359.10938,245.109375 C1359.18229,245.036458 1359.27083,245 1359.375,245 L1360.625,245 C1360.72917,245 1360.81771,245.036458 1360.89062,245.109375 C1360.96354,245.182292 1361,245.270833 1361,245.375 L1361,246.625 Z M1364,246.625 C1364,246.729167 1363.96354,246.817708 1363.89062,246.890625 C1363.81771,246.963542 1363.72917,247 1363.625,247 L1362.375,247 C1362.27083,247 1362.18229,246.963542 1362.10938,246.890625 C1362.03646,246.817708 1362,246.729167 1362,246.625 L1362,245.375 C1362,245.270833 1362.03646,245.182292 1362.10938,245.109375 C1362.18229,245.036458 1362.27083,245 1362.375,245 L1363.625,245 C1363.72917,245 1363.81771,245.036458 1363.89062,245.109375 C1363.96354,245.182292 1364,245.270833 1364,245.375 L1364,246.625 Z M1361,249.625 C1361,249.729167 1360.96354,249.817708 1360.89062,249.890625 C1360.81771,249.963542 1360.72917,250 1360.625,250 L1359.375,250 C1359.27083,250 1359.18229,249.963542 1359.10938,249.890625 C1359.03646,249.817708 1359,249.729167 1359,249.625 L1359,248.375 C1359,248.270833 1359.03646,248.182292 1359.10938,248.109375 C1359.18229,248.036458 1359.27083,248 1359.375,248 L1360.625,248 C1360.72917,248 1360.81771,248.036458 1360.89062,248.109375 C1360.96354,248.182292 1361,248.270833 1361,248.375 L1361,249.625 Z M1358,249.625 C1358,249.729167 1357.96354,249.817708 1357.89062,249.890625 C1357.81771,249.963542 1357.72917,250 1357.625,250 L1356.375,250 C1356.27083,250 1356.18229,249.963542 1356.10938,249.890625 C1356.03646,249.817708 1356,249.729167 1356,249.625 L1356,248.375 C1356,248.270833 1356.03646,248.182292 1356.10938,248.109375 C1356.18229,248.036458 1356.27083,248 1356.375,248 L1357.625,248 C1357.72917,248 1357.81771,248.036458 1357.89062,248.109375 C1357.96354,248.182292 1358,248.270833 1358,248.375 L1358,249.625 Z M1364,249.625 C1364,249.729167 1363.96354,249.817708 1363.89062,249.890625 C1363.81771,249.963542 1363.72917,250 1363.625,250 L1362.375,250 C1362.27083,250 1362.18229,249.963542 1362.10938,249.890625 C1362.03646,249.817708 1362,249.729167 1362,249.625 L1362,248.375 C1362,248.270833 1362.03646,248.182292 1362.10938,248.109375 C1362.18229,248.036458 1362.27083,248 1362.375,248 L1363.625,248 C1363.72917,248 1363.81771,248.036458 1363.89062,248.109375 C1363.96354,248.182292 1364,248.270833 1364,248.375 L1364,249.625 Z M1367,241.5 L1367,252.5 C1367,252.916669 1366.85417,253.270832 1366.5625,253.5625 C1366.27083,253.854168 1365.91667,254 1365.5,254 L1354.5,254 C1354.08333,254 1353.72917,253.854168 1353.4375,253.5625 C1353.14583,253.270832 1353,252.916669 1353,252.5 L1353,241.5 C1353,241.083331 1353.14583,240.729168 1353.4375,240.4375 C1353.72917,240.145832 1354.08333,240 1354.5,240 L1356,240 L1356,238.375 C1356,238.270833 1356.03646,238.182292 1356.10938,238.109375 C1356.18229,238.036458 1356.27083,238 1356.375,238 L1357.625,238 C1357.72917,238 1357.81771,238.036458 1357.89062,238.109375 C1357.96354,238.182292 1358,238.270833 1358,238.375 L1358,240 L1362,240 L1362,238.375 C1362,238.270833 1362.03646,238.182292 1362.10938,238.109375 C1362.18229,238.036458 1362.27083,238 1362.375,238 L1363.625,238 C1363.72917,238 1363.81771,238.036458 1363.89062,238.109375 C1363.96354,238.182292 1364,238.270833 1364,238.375 L1364,240 L1365.5,240 C1365.91667,240 1366.27083,240.145832 1366.5625,240.4375 C1366.85417,240.729168 1367,241.083331 1367,241.5 Z M1365.5,252.3125 L1365.5,243 L1354.5,243 L1354.5,252.3125 C1354.5,252.354167 1354.52083,252.395833 1354.5625,252.4375 C1354.60417,252.479167 1354.64583,252.5 1354.6875,252.5 L1365.3125,252.5 C1365.35417,252.5 1365.39583,252.479167 1365.4375,252.4375 C1365.47917,252.395833 1365.5,252.354167 1365.5,252.3125 Z" id="Calendar-Icon" />
                                    </g>
                                </g>
                            </svg>
                        </button>
                    </DataPicker>
                </div>
                <div className="datepicker">
                    <label className="title"> Date Picker </label>
                    <DataPicker options={{ dateFormat: "Y-m-d H:i", maxDate: Date.now(), onChange: this.onChange }} >
                        <input type="text" value="" />
                    </DataPicker>
                </div>
                <div className="datepicker time">
                    <label className="title"> Date and Time Picker </label>
                    <DataPicker options={{ enableTime: true, maxDate: Date.now() }} >
                        <input type="text" value="" />
                    </DataPicker>
                </div></div>
        )
    }
}

export default Example;